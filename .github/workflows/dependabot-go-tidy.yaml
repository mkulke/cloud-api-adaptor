name: Dependabot Go Mod Tidy

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write

jobs:
  tidy:
    if: github.actor == 'dependabot[bot]' && startsWith(github.event.pull_request.title, 'build(deps):')
    runs-on: ubuntu-latest
    steps:
      - name: Check out PR branch
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Install yq
        run: sudo snap install yq

      - name: Determine Go version
        id: go-version
        run: |
          go_version=$(yq -e '.tools.golang' src/cloud-api-adaptor/versions.yaml)
          echo "GO_VERSION=$go_version" >> "$GITHUB_ENV"

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run go mod tidy in all modules
        id: tidy
        shell: bash
        run: |
          modules=(cloud-api-adaptor cloud-providers csi-wrapper peerpod-ctrl webhook)
          for module in "${modules[@]}"; do
            echo "::group::Running go mod tidy in ${module}"
            (cd "src/${module}" && go mod tidy)
            echo "::endgroup::"
          done
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit go mod tidy updates
        if: steps.tidy.outputs.changes == 'true'
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git commit -am "chore: tidy go modules"

      - name: Push tidy changes
        if: steps.tidy.outputs.changes == 'true'
        run: git push
